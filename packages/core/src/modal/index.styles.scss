.base {
  --modal-size-open: 1;
  --modal-size-close: 0.92;
  --modal-animation-duration: 0.3s;

  // Open state
  &[open] {
    opacity: 1;
    transform: scale(var(--modal-size-open));

    &::backdrop {
      background-color: rgb(0 0 0 / 25%);
    }
  }

  // Closed state
  opacity: 0;
  transform: scale(var(--modal-size-close));
  transition: opacity var(--modal-animation-duration) ease-out,
    transform var(--modal-animation-duration) ease-out,
    overlay var(--modal-animation-duration) ease-out allow-discrete,
    display var(--modal-animation-duration) ease-out allow-discrete;
  padding: 0;
  border: 0;

  &::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition: display var(--modal-animation-duration) allow-discrete,
      overlay var(--modal-animation-duration) allow-discrete,
      background-color var(--modal-animation-duration);
  }

  /* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */
  @starting-style {
    &[open] {
      opacity: 0;
      transform: scale(var(--modal-size-close));

      &::backdrop {
        background-color: rgb(0 0 0 / 0%);
      }
    }
  }
}
